name: Build and Release NinjaMagisk Windows Tools

on:
  push:
    tags:
      - 'v*.*.*' # Runs automatically on tag push (e.g., v1.0.0)
  workflow_dispatch: # Adds manual trigger option

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # Adjust to your project's .NET version

      # Restore dependencies
      - name: Restore dependencies
        run: |
          dotnet restore "NinjaMagisk Windows Tools.sln" --verbosity normal
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      # Build the solution (Release configuration)
      - name: Build Release
        run: |
          dotnet build "NinjaMagisk Windows Tools.sln" --configuration Release --no-restore --verbosity normal
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      # Verify build output
      - name: Check Build Output
        run: |
          if (-Not (Test-Path "NinjaMagisk Windows Tools/bin/Release/net8.0/nmg_wtls.exe")) {
            Write-Error "Build output not found!"
            exit 1
          }

      # Package the output into a zip
      - name: Package Release
        run: |
          cd "NinjaMagisk Windows Tools/bin/Release/net8.0"
          powershell -Command "Compress-Archive -Path * -DestinationPath ../../../NinjaMagisk-Windows-Tools-${{ github.ref_name }}.zip"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      # Create a GitHub Release (only on tag push, not manual trigger)
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: NinjaMagisk Windows Tools ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}.
            Built on ${{ github.sha }}.
          draft: false
          prerelease: false

      # Upload the zip to the release (only on tag push)
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: NinjaMagisk-Windows-Tools-${{ github.ref_name }}.zip
          asset_name: NinjaMagisk-Windows-Tools-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      # Upload artifact for manual runs
      - name: Upload Build Artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: NinjaMagisk-Windows-Tools-${{ github.sha }}
          path: NinjaMagisk-Windows-Tools-${{ github.ref_name }}.zip
